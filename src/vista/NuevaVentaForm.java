/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vista;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import java.time.LocalDate;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Producto;
import modelo.ProductoDAO;
import modelo.Cliente;
import modelo.ClienteDAO;
import modelo.Venta;
import modelo.VentaDAO;
import modelo.DetalleVenta;
import modelo.DetalleVentaDAO;

import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Image;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.draw.LineSeparator;
import java.io.FileOutputStream;

import java.awt.Desktop;
import java.io.File;
import modelo.Empresa;
import modelo.EmpresaDAO;
/**
 *
 * @author SKAPIR
 */
public class NuevaVentaForm extends javax.swing.JPanel {
    ProductoDAO pdao = new ProductoDAO();  // ‚Üê IMPORTANTE
    ClienteDAO cdao = new ClienteDAO();
    VentaDAO vdao = new VentaDAO();
    DetalleVentaDAO dvdao = new DetalleVentaDAO();
    /**
     * Creates new form NuevaVentaForm
     */
    public NuevaVentaForm() {
        initComponents();
        DefaultTableModel modelo = (DefaultTableModel) tablaVentas.getModel();
        modelo.setRowCount(0); // <-- Esto borra filas de prueba por defecto
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SubPanel = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        lblCodigo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        txtProducto = new javax.swing.JTextField();
        txtCantidad = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();
        txtStock = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaVentas = new javax.swing.JTable();
        btnAgregarVenta = new javax.swing.JButton();
        lblCliente = new javax.swing.JLabel();
        txtCodigoCliente = new javax.swing.JTextField();
        btnBorrar = new javax.swing.JButton();
        lblCliente1 = new javax.swing.JLabel();
        txtNombreCliente = new javax.swing.JTextField();
        lblCliente3 = new javax.swing.JLabel();
        btnGrabar1 = new javax.swing.JButton();
        lblMontoPago = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(1000, 510));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(1000, 520));
        setRequestFocusEnabled(false);
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        SubPanel.setBackground(new java.awt.Color(255, 255, 255));
        SubPanel.setPreferredSize(new java.awt.Dimension(1000, 520));

        lblTitulo.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        lblTitulo.setText("VENTAS");

        lblCodigo.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblCodigo.setText("Codigo");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Producto");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Cantidad");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Precio");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Stock Disponible");

        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });

        txtProducto.setEditable(false);
        txtProducto.setBackground(new java.awt.Color(240, 240, 240));
        txtProducto.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtProducto.setDisabledTextColor(new java.awt.Color(242, 242, 242));
        txtProducto.setDoubleBuffered(true);
        txtProducto.setFocusable(false);

        txtPrecio.setEditable(false);
        txtPrecio.setBackground(new java.awt.Color(240, 240, 240));
        txtPrecio.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtPrecio.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtPrecio.setDisabledTextColor(new java.awt.Color(242, 242, 242));
        txtPrecio.setDoubleBuffered(true);
        txtPrecio.setFocusable(false);

        txtStock.setEditable(false);
        txtStock.setBackground(new java.awt.Color(240, 240, 240));
        txtStock.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtStock.setDisabledTextColor(new java.awt.Color(242, 242, 242));
        txtStock.setDoubleBuffered(true);
        txtStock.setFocusable(false);

        tablaVentas.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tablaVentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Producto", "Cantidad", "Precio", "Sub Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaVentas.getTableHeader().setResizingAllowed(false);
        tablaVentas.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tablaVentas);

        btnAgregarVenta.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAgregarVenta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Carrito-de-compras.png"))); // NOI18N
        btnAgregarVenta.setText("Agregar Venta");
        btnAgregarVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarVentaActionPerformed(evt);
            }
        });

        lblCliente.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblCliente.setText("Cliente");

        txtCodigoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoClienteActionPerformed(evt);
            }
        });
        txtCodigoCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDniKeyTyped(evt);
            }
        });

        btnBorrar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/eliminar.png"))); // NOI18N
        btnBorrar.setText("Borrar");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        lblCliente1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblCliente1.setText("Nombre :");

        txtNombreCliente.setEditable(false);
        txtNombreCliente.setBackground(new java.awt.Color(240, 240, 240));
        txtNombreCliente.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtNombreCliente.setFocusable(false);

        lblCliente3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblCliente3.setText("Total a Pagar  S/.");

        btnGrabar1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnGrabar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/print.png"))); // NOI18N
        btnGrabar1.setText("Cobrar");
        btnGrabar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrabar1ActionPerformed(evt);
            }
        });

        lblMontoPago.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblMontoPago.setText("---");
        lblMontoPago.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout SubPanelLayout = new javax.swing.GroupLayout(SubPanel);
        SubPanel.setLayout(SubPanelLayout);
        SubPanelLayout.setHorizontalGroup(
            SubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SubPanelLayout.createSequentialGroup()
                .addGroup(SubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SubPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(SubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(SubPanelLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(430, 430, 430))
                            .addGroup(SubPanelLayout.createSequentialGroup()
                                .addGroup(SubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1)
                                    .addComponent(lblCodigo))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(SubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                                .addGroup(SubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3))
                                .addGap(40, 40, 40)
                                .addGroup(SubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(SubPanelLayout.createSequentialGroup()
                        .addGroup(SubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(SubPanelLayout.createSequentialGroup()
                                .addGap(356, 356, 356)
                                .addComponent(lblTitulo))
                            .addGroup(SubPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnAgregarVenta)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBorrar)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(SubPanelLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(SubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCliente)
                    .addComponent(lblCliente1))
                .addGap(30, 30, 30)
                .addGroup(SubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCodigoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(94, 94, 94)
                .addGroup(SubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnGrabar1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(SubPanelLayout.createSequentialGroup()
                        .addComponent(lblCliente3)
                        .addGap(18, 18, 18)
                        .addComponent(lblMontoPago)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        SubPanelLayout.setVerticalGroup(
            SubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SubPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(SubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCodigo)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(SubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnAgregarVenta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBorrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(SubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCliente)
                    .addComponent(txtCodigoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCliente3)
                    .addComponent(lblMontoPago))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCliente1)
                    .addComponent(txtNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGrabar1))
                .addGap(27, 27, 27))
        );

        add(SubPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 960, 500));
    }// </editor-fold>//GEN-END:initComponents
    
    
    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
     String codigo = txtCodigo.getText();
    
        // Buscar producto por c√≥digo
        Producto producto = pdao.buscarPorCodigo(codigo);  // Aseg√∫rate de tener este m√©todo

        if (producto != null) {
            txtProducto.setText(producto.getNombre());
            txtPrecio.setText(String.valueOf(producto.getPrecio()));
            txtStock.setText(String.valueOf(producto.getStock()));
        } else {
            JOptionPane.showMessageDialog(this, "Producto no encontrado");
            txtProducto.setText("");
            txtPrecio.setText("");
            txtStock.setText("");
            }
    }//GEN-LAST:event_txtCodigoActionPerformed

    private void btnAgregarVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarVentaActionPerformed
        // TODO add your handling code here:
    try {
        int cantidad = Integer.parseInt(txtCantidad.getText());
        int stock = Integer.parseInt(txtStock.getText());

        if (cantidad > stock || stock == 0) {
            JOptionPane.showMessageDialog(this, "Stock insuficiente o agotado");
            return;
        }

        String codigo = txtCodigo.getText();
        String producto = txtProducto.getText();
        double precio = Double.parseDouble(txtPrecio.getText());
        double subtotal = precio * cantidad;

        DefaultTableModel modelo = (DefaultTableModel) tablaVentas.getModel();
        modelo.addRow(new Object[]{codigo, producto, cantidad, precio, subtotal});

        calcularTotal(); // Actualiza lblPago
        limpiarCamposVenta(); // Borra campos excepto cliente
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Ingrese una cantidad v√°lida");
        txtCantidad.requestFocus();
    }
    }//GEN-LAST:event_btnAgregarVentaActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        // TODO add your handling code here:
         int filaSeleccionada = tablaVentas.getSelectedRow();

        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Selecciona un producto en la tabla para eliminar.");
        } else {
            DefaultTableModel modelo = (DefaultTableModel) tablaVentas.getModel();
            modelo.removeRow(filaSeleccionada);
            calcularTotal(); // Opcional: recalcular el total despu√©s de eliminar
            limpiarCamposVenta(); // Opcional: limpiar los campos si lo deseas
        }   
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void txtCodigoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoClienteActionPerformed
     String dni = txtCodigoCliente.getText().trim();

    // Validar que el campo no est√© vac√≠o
    if (dni.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Ingrese un DNI o RUC v√°lido");
        return;
    }

    // Buscar cliente por DNI/RUC
    Cliente cliente = cdao.buscarPorDni(dni); // Aseg√∫rate de tener cdao declarado antes

    if (cliente != null) {
        txtNombreCliente.setText(cliente.getNombre());
    } else {
        txtNombreCliente.setText("Cliente no encontrado");
        txtCodigoCliente.setText("");
    }
        
    }//GEN-LAST:event_txtCodigoClienteActionPerformed

    private void btnGrabar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrabar1ActionPerformed
    int confirm = JOptionPane.showConfirmDialog(this, "¬øDeseas confirmar la venta?", "Confirmar", JOptionPane.YES_NO_OPTION);

    if (confirm != JOptionPane.YES_OPTION) return;

    try {
        // Datos de cabecera
        String dniCliente = txtCodigoCliente.getText();
        Cliente cliente = cdao.buscarPorDni(dniCliente);
        if (cliente == null) {
            JOptionPane.showMessageDialog(this, "Cliente no v√°lido");
            txtCodigoCliente.requestFocus();
            return;
        }

        // Insertar venta
        Venta venta = new Venta();
        venta.setClienteId(cliente.getId());
        venta.setFecha(LocalDate.now().toString()); // o usa DateFormat para obtener fecha actual
        venta.setTotal(Double.parseDouble(lblMontoPago.getText()));

        int idVenta = vdao.insertarVenta(venta); // Este m√©todo debe retornar el ID generado

        // Insertar detalle por cada fila de la tabla
        DefaultTableModel modelo = (DefaultTableModel) tablaVentas.getModel();
        for (int i = 0; i < modelo.getRowCount(); i++) {
            DetalleVenta detalle = new DetalleVenta();
            detalle.setVentaId(idVenta);
            detalle.setProductoId(modelo.getValueAt(i, 0).toString());
            detalle.setCantidad(Integer.parseInt(modelo.getValueAt(i, 2).toString()));
            detalle.setPrecio(Double.parseDouble(modelo.getValueAt(i, 3).toString()));
            detalle.setSubtotal(Double.parseDouble(modelo.getValueAt(i, 4).toString()));

            dvdao.insertarDetalle(detalle); // m√©todo para grabar detalle_venta
        }

        JOptionPane.showMessageDialog(this, "‚úÖ Venta realizada con √©xito");

        generarBoletaPDF(venta,cliente, modelo); // ahora lo generamos
        limpiarTodo();

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "‚ùå Error al cobrar: " + e.getMessage());
    }
    
    }//GEN-LAST:event_btnGrabar1ActionPerformed

    private void txtDniKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDniKeyTyped
    char c = evt.getKeyChar();
    
    // Solo permite n√∫meros
    if (!Character.isDigit(c)) {
        evt.consume(); // ignora la tecla
    }

    // Limita a 8 caracteres
    if (txtCodigoCliente.getText().length() >= 8) {
        evt.consume(); // ignora si ya hay 8 caracteres
    }
    }//GEN-LAST:event_txtDniKeyTyped
    private void calcularTotal() {
        double total = 0;
    DefaultTableModel modelo = (DefaultTableModel) tablaVentas.getModel();

    for (int i = 0; i < modelo.getRowCount(); i++) {
        int cantidad = Integer.parseInt(modelo.getValueAt(i, 2).toString());
        double precio = Double.parseDouble(modelo.getValueAt(i, 3).toString());
        total += cantidad * precio;
    }

    lblMontoPago.setText(String.format("%.2f", total));
}
    
    private void limpiarCamposVenta() {
    txtCodigo.setText("");
    txtProducto.setText("");
    txtCantidad.setText("");
    txtPrecio.setText("");
    txtStock.setText("");
    txtCodigo.requestFocus();
}
    
    private void limpiarTodo() {
    limpiarCamposVenta();
    txtCodigoCliente.setText("");
    txtNombreCliente.setText("");
    lblMontoPago.setText("");

    DefaultTableModel modelo = (DefaultTableModel) tablaVentas.getModel();
    modelo.setRowCount(0);

    tablaVentas.clearSelection();
}
    
//public void generarBoletaPDF(Venta venta, Cliente cliente, DefaultTableModel modelo) {
public void generarBoletaPDF(Venta venta, Cliente cliente, DefaultTableModel modelo) {
    Document documento = new Document(PageSize.A4, 40, 40, 30, 30);
    try {
        File carpeta = new File("boletas");
        if (!carpeta.exists()) carpeta.mkdir();

        String nombreArchivo = "boletas/boleta_venta_" + venta.getId() + ".pdf";
        PdfWriter.getInstance(documento, new FileOutputStream(nombreArchivo));
        documento.open();

        // Obtener datos de empresa
        EmpresaDAO edao = new EmpresaDAO();
        Empresa empresa = edao.obtenerEmpresa();

        // Logo y Empresa en una tabla
        PdfPTable header = new PdfPTable(2);
        header.setWidthPercentage(100);
        header.setWidths(new int[]{1, 3});

        // Logo
        Image logo = Image.getInstance("src/imagenes/logo_pdf.png");
        logo.scaleToFit(70, 70);
        PdfPCell celdaLogo = new PdfPCell(logo, false);
        celdaLogo.setBorder(Rectangle.NO_BORDER);
        header.addCell(celdaLogo);

        // Datos empresa
        PdfPCell datosEmpresa = new PdfPCell();
        datosEmpresa.setBorder(Rectangle.NO_BORDER);
        datosEmpresa.addElement(new Paragraph("RUC: " + empresa.getRuc()));
        datosEmpresa.addElement(new Paragraph("NOMBRE: " + empresa.getNombre()));
        datosEmpresa.addElement(new Paragraph("TEL√âFONO: " + empresa.getTelefono()));
        datosEmpresa.addElement(new Paragraph("DIRECCI√ìN: " + empresa.getDireccion()));
        datosEmpresa.addElement(new Paragraph("RAZ√ìN SOCIAL: " + empresa.getRazonSocial()));
        header.addCell(datosEmpresa);

        documento.add(header);
        documento.add(new Paragraph(" ")); // Espacio

        // L√≠nea separadora
        LineSeparator separator = new LineSeparator();
        separator.setOffset(-2);
        documento.add(new Chunk(separator));

        // T√≠tulo centrado
        Paragraph titulo = new Paragraph("BOLETA DE VENTA", FontFactory.getFont(FontFactory.HELVETICA_BOLD, 16));
        titulo.setAlignment(Element.ALIGN_CENTER);
        titulo.setSpacingBefore(10);
        documento.add(titulo);

        documento.add(new Paragraph(" "));

        // Datos del cliente
        PdfPTable datosCliente = new PdfPTable(2);
        datosCliente.setWidthPercentage(100);
        datosCliente.setSpacingBefore(10);

        datosCliente.addCell(getCeldaNegrita("Fecha:"));
        datosCliente.addCell(getCeldaNormal(venta.getFecha()));

        datosCliente.addCell(getCeldaNegrita("DNI/RUC:"));
        datosCliente.addCell(getCeldaNormal(cliente.getDni()));

        datosCliente.addCell(getCeldaNegrita("Nombre:"));
        datosCliente.addCell(getCeldaNormal(cliente.getNombre()));


        documento.add(datosCliente);
        documento.add(new Paragraph(" "));

        // Tabla de productos
        PdfPTable tabla = new PdfPTable(4);
        tabla.setWidthPercentage(100);
        tabla.setWidths(new float[]{4, 2, 2, 2});
        tabla.setSpacingBefore(10);

        String[] encabezados = {"Producto", "Cantidad", "Precio", "Subtotal"};
        for (String encabezado : encabezados) {
            PdfPCell cell = new PdfPCell(new Phrase(encabezado, FontFactory.getFont(FontFactory.HELVETICA_BOLD)));
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            tabla.addCell(cell);
        }

        for (int i = 0; i < modelo.getRowCount(); i++) {
            tabla.addCell(modelo.getValueAt(i, 1).toString());
            tabla.addCell(modelo.getValueAt(i, 2).toString());
            tabla.addCell(modelo.getValueAt(i, 3).toString());
            tabla.addCell(modelo.getValueAt(i, 4).toString());
        }

        documento.add(tabla);

        // Total
        Paragraph total = new Paragraph("Total a Pagar: S/. " + String.format("%.2f", venta.getTotal()), 
                FontFactory.getFont(FontFactory.HELVETICA_BOLD, 13, BaseColor.BLACK));
        total.setAlignment(Element.ALIGN_RIGHT);
        total.setSpacingBefore(10);
        documento.add(total);

        // Firma y agradecimiento
        documento.add(new Paragraph(" "));
        documento.add(new Paragraph("Gracias por su compra", FontFactory.getFont(FontFactory.HELVETICA_OBLIQUE, 10)));

        documento.add(new Paragraph(" "));
        documento.add(new Paragraph("_________________________", FontFactory.getFont(FontFactory.HELVETICA, 9)));
        documento.add(new Paragraph("Firma", FontFactory.getFont(FontFactory.HELVETICA, 9)));

        documento.close();

        Desktop.getDesktop().open(new File(nombreArchivo));
        JOptionPane.showMessageDialog(null, "‚úÖ Boleta generada exitosamente:\n" + nombreArchivo);

    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "‚ùå Error al generar boleta: " + e.getMessage());
    }
}


// Celdas utilitarias
private PdfPCell getCeldaNegrita(String texto) {
    PdfPCell celda = new PdfPCell(new Phrase(texto, FontFactory.getFont(FontFactory.HELVETICA_BOLD)));
    celda.setBorder(Rectangle.NO_BORDER);
    return celda;
}

private PdfPCell getCeldaNormal(String texto) {
    PdfPCell celda = new PdfPCell(new Phrase(texto));
    celda.setBorder(Rectangle.NO_BORDER);
    return celda;
}





    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel SubPanel;
    private javax.swing.JButton btnAgregarVenta;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnGrabar1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCliente;
    private javax.swing.JLabel lblCliente1;
    private javax.swing.JLabel lblCliente3;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblMontoPago;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTable tablaVentas;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtCodigoCliente;
    private javax.swing.JTextField txtNombreCliente;
    private javax.swing.JTextField txtPrecio;
    private javax.swing.JTextField txtProducto;
    private javax.swing.JTextField txtStock;
    // End of variables declaration//GEN-END:variables
}
