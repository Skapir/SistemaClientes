/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vista;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Desktop;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.time.LocalDate;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Proveedor;
import modelo.ProveedorDAO;
import org.apache.commons.compress.utils.IOUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.ClientAnchor;
import org.apache.poi.ss.usermodel.FillPatternType;
import org.apache.poi.ss.usermodel.HorizontalAlignment;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.util.CellRangeAddress;
import org.apache.poi.xssf.usermodel.XSSFClientAnchor;
import org.apache.poi.xssf.usermodel.XSSFDrawing;
import org.apache.poi.xssf.usermodel.XSSFFont;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
/**
 *
 * @author SKAPIR
 */
public class ProveedoresForm extends javax.swing.JPanel {

    /**
     * Creates new form ProveedoresForm
     */
    public ProveedoresForm() {
        initComponents();
         listarProveedores(); // ← carga datos al abrir
         estadoInicialBotones();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNombre = new javax.swing.JLabel();
        lblDireccion = new javax.swing.JLabel();
        lblTelefono = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        txtRazonSocial = new javax.swing.JTextField();
        lblRazonSocial = new javax.swing.JLabel();
        lblNombre1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaProveedores = new javax.swing.JTable();
        btnGuardar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        btnExcel = new javax.swing.JButton();
        btnPdf = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblNombre.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblNombre.setText("Nombre:");
        add(lblNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, -1, -1));

        lblDireccion.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblDireccion.setText("Dirección :");
        add(lblDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 110, -1, -1));

        lblTelefono.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTelefono.setText("Teléfono :");
        add(lblTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, -1, -1));

        txtNombre.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, 254, -1));

        txtDireccion.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        add(txtDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 110, 254, -1));

        txtTelefono.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        add(txtTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 160, 254, -1));

        txtRazonSocial.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        add(txtRazonSocial, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 160, 254, -1));

        lblRazonSocial.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblRazonSocial.setText("Razón Social :");
        add(lblRazonSocial, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 160, -1, -1));

        lblNombre1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lblNombre1.setText("Gestión de Proveedores");
        add(lblNombre1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 20, -1, -1));

        tablaProveedores.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tablaProveedores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaProveedores.getTableHeader().setResizingAllowed(false);
        tablaProveedores.getTableHeader().setReorderingAllowed(false);
        tablaProveedores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaProveedoresMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaProveedores);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 970, 240));

        btnGuardar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/GuardarTodo.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 220, -1, 40));

        btnActualizar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Actualizar (2).png"))); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        add(btnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 220, -1, 40));

        btnEliminar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/eliminar.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 220, -1, 40));

        btnNuevo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/nuevo.png"))); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        add(btnNuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 220, -1, 40));

        btnExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/excel.png"))); // NOI18N
        btnExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcelActionPerformed(evt);
            }
        });
        add(btnExcel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, -1, -1));

        btnPdf.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/pdf.png"))); // NOI18N
        btnPdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPdfActionPerformed(evt);
            }
        });
        add(btnPdf, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 230, 40, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
    // Obtener datos desde los campos del formulario
        String nombre = txtNombre.getText();
        String telefono = txtTelefono.getText();
        String direccion = txtDireccion.getText();
        String razonSocial = txtRazonSocial.getText();

        // Validación básica
        if (nombre.isEmpty() || telefono.isEmpty() || direccion.isEmpty() || razonSocial.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Completa todos los campos.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Crear objeto Proveedor
        Proveedor proveedor = new Proveedor();
        proveedor.setNombre(nombre);
        proveedor.setTelefono(telefono);
        proveedor.setDireccion(direccion);
        proveedor.setRazonSocial(razonSocial);

        // Insertar en base de datos
        ProveedorDAO dao = new ProveedorDAO();
        if (dao.insertar(proveedor)) {
            JOptionPane.showMessageDialog(this, "✔ Proveedor registrado.");
            listarProveedores();   // Actualiza tabla
            limpiarCampos();      // Limpia los campos
        } else {
            JOptionPane.showMessageDialog(this, "❌ Error al registrar.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
      int fila = tablaProveedores.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "Selecciona un proveedor para actualizar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int id = Integer.parseInt(tablaProveedores.getValueAt(fila, 0).toString());
        String nombre = txtNombre.getText();
        String telefono = txtTelefono.getText();
        String direccion = txtDireccion.getText();
        String razonSocial = txtRazonSocial.getText();

        Proveedor proveedor = new Proveedor(id,nombre, telefono, direccion, razonSocial);
        ProveedorDAO dao = new ProveedorDAO();

        if (dao.actualizar(proveedor)) {
            JOptionPane.showMessageDialog(this, "✅ Proveedor actualizado.");
            listarProveedores();
            limpiarCampos();
        } else {
            JOptionPane.showMessageDialog(this, "❌ Error al actualizar.", "Error", JOptionPane.ERROR_MESSAGE);
        }  
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        int fila = tablaProveedores.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "Selecciona un proveedor para eliminar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int id = Integer.parseInt(tablaProveedores.getValueAt(fila, 0).toString());
        int confirm = JOptionPane.showConfirmDialog(this, "¿Estás seguro de eliminar este proveedor?", "Confirmar", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            ProveedorDAO dao = new ProveedorDAO();
            if (dao.eliminar(id)) {
                JOptionPane.showMessageDialog(this, "🗑️ Proveedor eliminado.");
                listarProveedores();
                limpiarCampos();
            } else {
                JOptionPane.showMessageDialog(this, "❌ Error al eliminar.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // TODO add your handling code here:
        limpiarCampos();
        
        // Activar/Desactivar botones
        btnGuardar.setEnabled(true);
        btnActualizar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnNuevo.setEnabled(false);
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void tablaProveedoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaProveedoresMouseClicked
        // TODO add your handling code here:
        int fila = tablaProveedores.rowAtPoint(evt.getPoint());

        // Asegurarse de que se hizo clic en una fila válida
        if (fila >= 0) {
            txtNombre.setText(tablaProveedores.getValueAt(fila, 1).toString());
            txtTelefono.setText(tablaProveedores.getValueAt(fila, 2).toString());
            txtDireccion.setText(tablaProveedores.getValueAt(fila, 3).toString());
            txtRazonSocial.setText(tablaProveedores.getValueAt(fila, 4).toString());
        }
        // Activar/Desactivar botones
        btnGuardar.setEnabled(false);
        btnNuevo.setEnabled(true);
        btnActualizar.setEnabled(true);
        btnEliminar.setEnabled(true);
    }//GEN-LAST:event_tablaProveedoresMouseClicked

    private void btnExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcelActionPerformed
        // TODO add your handling code here:
          try {
        // Crear libro y hoja
        XSSFWorkbook libro = new XSSFWorkbook();
        XSSFSheet hoja = libro.createSheet("Proveedores");

        // Insertar imagen (logo)
        InputStream input = new FileInputStream("src/imagenes/logo_pdf.png");
        byte[] bytes = IOUtils.toByteArray(input);
        int indiceImagen = libro.addPicture(bytes, XSSFWorkbook.PICTURE_TYPE_PNG);
        input.close();

        XSSFDrawing dibujo = hoja.createDrawingPatriarch();
        ClientAnchor anchor = new XSSFClientAnchor();
        anchor.setCol1(0);
        anchor.setRow1(0);
        dibujo.createPicture(anchor, indiceImagen).resize();

        // Estilo de título
        CellStyle estiloTitulo = libro.createCellStyle();
        XSSFFont fuenteTitulo = libro.createFont();
        fuenteTitulo.setFontHeightInPoints((short) 16);
        fuenteTitulo.setBold(true);
        estiloTitulo.setFont(fuenteTitulo);
        estiloTitulo.setAlignment(HorizontalAlignment.CENTER);

        Row filaTitulo = hoja.createRow(1);
        Cell celdaTitulo = filaTitulo.createCell(1);
        celdaTitulo.setCellValue("Reporte de Proveedores");
        celdaTitulo.setCellStyle(estiloTitulo);
        hoja.addMergedRegion(new CellRangeAddress(1, 1, 1, 3));

        // Encabezados
        String[] encabezados = {"ID", "Nombre","Telefono", "Direccion", "Razon Social"};

        CellStyle estiloEncabezado = libro.createCellStyle();
        XSSFFont fuenteEncabezado = libro.createFont();
        fuenteEncabezado.setBold(true);
        fuenteEncabezado.setColor(IndexedColors.WHITE.getIndex());
        estiloEncabezado.setFont(fuenteEncabezado);
        estiloEncabezado.setFillForegroundColor(IndexedColors.BLUE.getIndex());
        estiloEncabezado.setFillPattern(FillPatternType.SOLID_FOREGROUND);
        estiloEncabezado.setAlignment(HorizontalAlignment.CENTER);

        Row filaEncabezado = hoja.createRow(4);
        for (int i = 0; i < encabezados.length; i++) {
            Cell celda = filaEncabezado.createCell(i);
            celda.setCellValue(encabezados[i]);
            celda.setCellStyle(estiloEncabezado);
        }

        // Datos desde JTable (tablaClientes)
        for (int i = 0; i < tablaProveedores.getRowCount(); i++) {
            Row filaDatos = hoja.createRow(i + 5);
            for (int j = 0; j < tablaProveedores.getColumnCount(); j++) {
                Object valor = tablaProveedores.getValueAt(i, j);
                filaDatos.createCell(j).setCellValue(valor != null ? valor.toString() : "");
            }
        }

        // Ajustar tamaño de columnas
        for (int i = 0; i < encabezados.length; i++) {
            hoja.autoSizeColumn(i);
        }

        // Guardar archivo
        File archivo = new File("reporte_proveedores.xlsx");
        FileOutputStream fileOut = new FileOutputStream(archivo);
        libro.write(fileOut);
        fileOut.close();
        libro.close();

        // Abrir archivo generado
        Desktop.getDesktop().open(archivo);
        JOptionPane.showMessageDialog(null, "✅ Excel generado correctamente: " + archivo.getAbsolutePath());

    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "❌ Error al generar Excel: " + e.getMessage());
    }  
    }//GEN-LAST:event_btnExcelActionPerformed

    private void btnPdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPdfActionPerformed
        // TODO add your handling code here:
           Document documento = new Document();

    try {
        File carpeta = new File("reportes");
        if (!carpeta.exists()) carpeta.mkdir();

        String ruta = "reportes/reporte_proveedores.pdf";
        PdfWriter.getInstance(documento, new FileOutputStream(ruta));
        documento.open();

        // Añadir logo
        Image logo = Image.getInstance("src/imagenes/logo_pdf.png");
        logo.scaleToFit(100, 100);
        logo.setAlignment(Element.ALIGN_LEFT);
        documento.add(logo);

        // Título
        Paragraph titulo = new Paragraph("REPORTE DE PROVEEDORES", 
                FontFactory.getFont(FontFactory.HELVETICA_BOLD, 16, BaseColor.BLACK));
        titulo.setAlignment(Element.ALIGN_CENTER);
        titulo.setSpacingAfter(20);
        documento.add(titulo);

        // Tabla
        PdfPTable tabla = new PdfPTable(5); // ← corregido de 4 a 5
        tabla.setWidthPercentage(100);
        tabla.setWidths(new float[]{2f, 3f, 2.5f, 3f, 3f});
        tabla.setSpacingBefore(10);

        // Encabezados
        String[] encabezados = {"ID", "Nombre","Telefono", "Direccion", "Razon Social"};
        for (String cabecera : encabezados) {
            PdfPCell celdaEncabezado = new PdfPCell(new Phrase(cabecera,
                FontFactory.getFont(FontFactory.HELVETICA_BOLD, 12, BaseColor.WHITE)));
            celdaEncabezado.setBackgroundColor(BaseColor.DARK_GRAY);
            celdaEncabezado.setHorizontalAlignment(Element.ALIGN_CENTER);
            celdaEncabezado.setPadding(8);
            tabla.addCell(celdaEncabezado);
        }

        // Datos
        for (int i = 0; i < tablaProveedores.getRowCount(); i++) {
            for (int j = 0; j < tablaProveedores.getColumnCount(); j++) {
                String valor = tablaProveedores.getValueAt(i, j).toString();
                PdfPCell celda = new PdfPCell(new Phrase(valor,
                    FontFactory.getFont(FontFactory.HELVETICA, 11)));
                celda.setHorizontalAlignment(Element.ALIGN_CENTER);
                celda.setPadding(6);
                tabla.addCell(celda);
            }
        }

        documento.add(tabla);

        // Pie de página
        documento.add(new Paragraph(" "));
        Paragraph pie = new Paragraph("Generado el: " + LocalDate.now(),
            FontFactory.getFont(FontFactory.HELVETICA_OBLIQUE, 9));
        pie.setAlignment(Element.ALIGN_RIGHT);
        documento.add(pie);

        documento.close();
        Desktop.getDesktop().open(new File(ruta));
        JOptionPane.showMessageDialog(this, "✅ PDF profesional generado correctamente");

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "❌ Error al generar PDF: " + e.getMessage());
    }
    }//GEN-LAST:event_btnPdfActionPerformed
    
    private void limpiarCampos() {
    txtNombre.setText("");
    txtTelefono.setText("");
    txtDireccion.setText("");
    txtRazonSocial.setText("");
    tablaProveedores.clearSelection();
    txtNombre.requestFocus();
}

    private void listarProveedores() {
    
    DefaultTableModel modelo = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // ninguna celda será editable
            }
        };
    modelo.addColumn("ID");
    modelo.addColumn("Nombre");
    modelo.addColumn("Teléfono");
    modelo.addColumn("Dirección");
    modelo.addColumn("Razón Social");

    ProveedorDAO dao = new ProveedorDAO();
    for (Proveedor p : dao.listar()) {
        Object[] fila = {
            p.getId(),
            p.getNombre(),
            p.getTelefono(),
            p.getDireccion(),
            p.getRazonSocial()
        };
        modelo.addRow(fila);
    }

    tablaProveedores.setModel(modelo);  // Asegúrate que se llame así tu JTable
}

    private void estadoInicialBotones() {
        btnGuardar.setEnabled(true);
        btnNuevo.setEnabled(false);
        btnActualizar.setEnabled(false);
        btnEliminar.setEnabled(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnExcel;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnPdf;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDireccion;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblNombre1;
    private javax.swing.JLabel lblRazonSocial;
    private javax.swing.JLabel lblTelefono;
    private javax.swing.JTable tablaProveedores;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtRazonSocial;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
